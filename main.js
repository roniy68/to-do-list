(()=>{"use strict";var n={890:(n,r,t)=>{t.d(r,{Z:()=>l});var e=t(537),o=t.n(e),i=t(645),a=t.n(i)()(o());a.push([n.id,"html,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  height: 100vh;\r\n}\r\n\r\n.main {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n\r\n.todo-list {\r\n  min-width: 300px;\r\n  width: 50%;\r\n  max-width: 1000px;\r\n  box-shadow: 10px 14px 14px -5px rgba(237, 94, 94, 0.3);\r\n}\r\n\r\n.todo-input {\r\n  display: flex;\r\n  padding: 14px;\r\n}\r\n\r\n.task-input {\r\n  /* stylelint-disable-next-line */\r\n  width: -webkit-fill-available;\r\n  height: 30px;\r\n  padding: 0 0 0 7px;\r\n  border: 1px solid rgb(123, 53, 53);\r\n  margin: 0 14px 0 0;\r\n}\r\n\r\n.task-add-btn {\r\n  background-color: rgb(4, 160, 84);\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0 14px;\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.task-add-btn:hover {\r\n  background-color: rgb(38, 37, 37);\r\n}\r\n\r\n.todo-list-title {\r\n  margin-top: 14px;\r\n  padding: 0 14px;\r\n}\r\n\r\n.todo-list-ul {\r\n  list-style: none;\r\n  padding: 0 14px;\r\n  margin: 0;\r\n}\r\n\r\n.todo-list-li {\r\n  display: flex;\r\n  padding: 7px 0;\r\n  border-bottom: 1px solid rgb(130, 127, 127);\r\n}\r\n\r\n.todo-list-li:last-child {\r\n  border-bottom: none;\r\n  padding: 7px 0 0 0;\r\n}\r\n\r\n.todo-list-li-text {\r\n  /* stylelint-disable-next-line */\r\n  width: -webkit-fill-available;\r\n  padding: 0 7px;\r\n  background-color: #fff;\r\n  border: none;\r\n  color: black;\r\n}\r\n\r\n.todo-list-li-text:hover {\r\n  background-color: #eee;\r\n}\r\n\r\n.todo-list-li-text:focus {\r\n  background-color: #eee;\r\n}\r\n\r\n.todo-list-li-cross {\r\n  padding-right: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none !important;\r\n}\r\n\r\n.todo-list-clear-btn {\r\n  width: 100%;\r\n  height: 40px;\r\n  margin: 14px 0 0 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: #555;\r\n  color: #fff;\r\n  outline: none;\r\n}\r\n\r\n.todo-list-clear-btn:hover {\r\n  background-color: #333;\r\n}\r\n\r\n.completed {\r\n  text-decoration: line-through;\r\n}\r\n","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;;EAEE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,UAAU;EACV,iBAAiB;EACjB,sDAAsD;AACxD;;AAEA;EACE,aAAa;EACb,aAAa;AACf;;AAEA;EACE,gCAAgC;EAChC,6BAA6B;EAC7B,YAAY;EACZ,kBAAkB;EAClB,kCAAkC;EAClC,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;EACjC,WAAW;EACX,YAAY;EACZ,eAAe;EACf,eAAe;EACf,aAAa;AACf;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,SAAS;AACX;;AAEA;EACE,aAAa;EACb,cAAc;EACd,2CAA2C;AAC7C;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,gCAAgC;EAChC,6BAA6B;EAC7B,cAAc;EACd,sBAAsB;EACtB,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,gCAAgC;AAClC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,sBAAsB;EACtB,WAAW;EACX,aAAa;AACf;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6BAA6B;AAC/B",sourcesContent:["html,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  height: 100vh;\r\n}\r\n\r\n.main {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n\r\n.todo-list {\r\n  min-width: 300px;\r\n  width: 50%;\r\n  max-width: 1000px;\r\n  box-shadow: 10px 14px 14px -5px rgba(237, 94, 94, 0.3);\r\n}\r\n\r\n.todo-input {\r\n  display: flex;\r\n  padding: 14px;\r\n}\r\n\r\n.task-input {\r\n  /* stylelint-disable-next-line */\r\n  width: -webkit-fill-available;\r\n  height: 30px;\r\n  padding: 0 0 0 7px;\r\n  border: 1px solid rgb(123, 53, 53);\r\n  margin: 0 14px 0 0;\r\n}\r\n\r\n.task-add-btn {\r\n  background-color: rgb(4, 160, 84);\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0 14px;\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.task-add-btn:hover {\r\n  background-color: rgb(38, 37, 37);\r\n}\r\n\r\n.todo-list-title {\r\n  margin-top: 14px;\r\n  padding: 0 14px;\r\n}\r\n\r\n.todo-list-ul {\r\n  list-style: none;\r\n  padding: 0 14px;\r\n  margin: 0;\r\n}\r\n\r\n.todo-list-li {\r\n  display: flex;\r\n  padding: 7px 0;\r\n  border-bottom: 1px solid rgb(130, 127, 127);\r\n}\r\n\r\n.todo-list-li:last-child {\r\n  border-bottom: none;\r\n  padding: 7px 0 0 0;\r\n}\r\n\r\n.todo-list-li-text {\r\n  /* stylelint-disable-next-line */\r\n  width: -webkit-fill-available;\r\n  padding: 0 7px;\r\n  background-color: #fff;\r\n  border: none;\r\n  color: black;\r\n}\r\n\r\n.todo-list-li-text:hover {\r\n  background-color: #eee;\r\n}\r\n\r\n.todo-list-li-text:focus {\r\n  background-color: #eee;\r\n}\r\n\r\n.todo-list-li-cross {\r\n  padding-right: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none !important;\r\n}\r\n\r\n.todo-list-clear-btn {\r\n  width: 100%;\r\n  height: 40px;\r\n  margin: 14px 0 0 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: #555;\r\n  color: #fff;\r\n  outline: none;\r\n}\r\n\r\n.todo-list-clear-btn:hover {\r\n  background-color: #333;\r\n}\r\n\r\n.completed {\r\n  text-decoration: line-through;\r\n}\r\n"],sourceRoot:""}]);const l=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var t="",e=void 0!==r[5];return r[4]&&(t+="@supports (".concat(r[4],") {")),r[2]&&(t+="@media ".concat(r[2]," {")),e&&(t+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),t+=n(r),e&&(t+="}"),r[2]&&(t+="}"),r[4]&&(t+="}"),t})).join("")},r.i=function(n,t,e,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(e)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);e&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),r.push(A))}},r}},537:n=>{n.exports=function(n){var r=n[1],t=n[3];if(!t)return r;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),i="/*# ".concat(o," */");return[r].concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function t(n){for(var t=-1,e=0;e<r.length;e++)if(r[e].identifier===n){t=e;break}return t}function e(n,e){for(var i={},a=[],l=0;l<n.length;l++){var s=n[l],d=e.base?s[0]+e.base:s[0],A=i[d]||0,c="".concat(d," ").concat(A);i[d]=A+1;var p=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var E=o(u,e);e.byIndex=l,r.splice(l,0,{identifier:c,updater:E,references:1})}a.push(c)}return a}function o(n,r){var t=r.domAPI(r);return t.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;t.update(n=r)}else t.remove()}}n.exports=function(n,o){var i=e(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var l=t(i[a]);r[l].references--}for(var s=e(n,o),d=0;d<i.length;d++){var A=t(i[d]);0===r[A].references&&(r[A].updater(),r.splice(A,1))}i=s}}},569:n=>{var r={};n.exports=function(n,t){var e=function(n){if(void 0===r[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}r[n]=t}return r[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,t)=>{n.exports=function(n){var r=t.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(t){!function(n,r,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,o&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(e,n,r.options)}(r,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function t(e){var o=r[e];if(void 0!==o)return o.exports;var i=r[e]={id:e,exports:{}};return n[e](i,i.exports,t),i.exports}t.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return t.d(r,{a:r}),r},t.d=(n,r)=>{for(var e in r)t.o(r,e)&&!t.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},t.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),t.nc=void 0,(()=>{const n=n=>{localStorage.setItem("toDoList",JSON.stringify(n))},r=()=>{let n;return n=JSON.parse(localStorage.getItem("toDoList"))||[],n},e=document.querySelector(".todo-list-ul"),o=(n,r)=>{n.push({task:r,completed:!1,id:n.length+1})},i=r=>((r=r.filter((n=>!1===n.completed))).forEach(((n,r)=>{n.id=r+1})),n(e),r),a=n=>{e.innerHTML="",r().forEach((n=>{const r=document.createElement("li");r.classList.add("todo-list-li");const t=document.createElement("input");t.classList.add("todo-list-li-checkbox"),t.type="checkbox",t.checked=n.completed,r.appendChild(t);const o=document.createElement("input");o.classList.add("todo-list-li-text"),o.value=n.task,o.disabled=!0,r.appendChild(o),n.completed&&o.classList.add("completed");const i=document.createElement("span");i.classList.add("todo-list-li-cross"),i.innerHTML="x",r.appendChild(i),e.appendChild(r)}))},l=r(),s=document.querySelector(".task-input"),d=document.querySelector(".todo-list-ul"),A=document.querySelector(".todo-list-clear-btn"),c=document.querySelector(".task-add-btn");s.addEventListener("keypress",(r=>{"Enter"===r.key&&""!==s.value&&(o(l,s.value),s.value="",n(l),a())})),c.addEventListener("click",(()=>{""!==s.value&&(o(l,s.value),s.value="",n(l),a())})),d.addEventListener("click",(r=>{r.target.closest(".todo-list-li-checkbox")&&((r,t)=>{const e=r.target.closest(".todo-list-li-checkbox").nextElementSibling,o=t.findIndex((n=>n.task===e.value));t[o].completed=!t[o].completed,n(t),a()})(r,l)})),A.addEventListener("click",(()=>{const r=i(l);n(r),a()})),d.addEventListener("dblclick",(r=>{r.target.closest(".todo-list-li-text")&&((r,t)=>{const e=r.target.closest(".todo-list-li-text");e.disabled=!1,e.focus();const o=e.value;e.addEventListener("keypress",(r=>{if("Enter"===r.key&&""!==e.value){const r=t.findIndex((n=>n.task===o));t[r].task=e.value,e.disabled=!0,n(t),a()}}))})(r,l)})),d.addEventListener("click",(r=>{r.target.closest(".todo-list-li-cross")&&((r,t)=>{const e=r.target.closest(".todo-list-li-cross").previousElementSibling,o=t.findIndex((n=>n.task===e.value));t.splice(o,1),t.forEach(((n,r)=>{n.id=r+1})),n(t),a()})(r,l)}));var p=t(379),u=t.n(p),E=t(795),f=t.n(E),g=t(569),C=t.n(g),b=t(565),x=t.n(b),h=t(216),m=t.n(h),v=t(589),B=t.n(v),k=t(890),y={};y.styleTagTransform=B(),y.setAttributes=x(),y.insert=C().bind(null,"head"),y.domAPI=f(),y.insertStyleElement=m(),u()(k.Z,y),k.Z&&k.Z.locals&&k.Z.locals,a()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,